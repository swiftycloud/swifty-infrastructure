- name: copy swifty.config.json
  template:
    src: swifty.config.j2
    dest: /root/swifty.config.json
    owner: root
    group: root
    mode: 0644

- name: check if certs volume exists
  command: docker volume inspect certs
  register: certs_volume_exists
  failed_when: false

- name: create certs volume
  command: docker volume create --name certs
  when: certs_volume_exists is failed

- name: check if certs-data exists
  command: docker volume inspect certs-data
  register: certs_data_exists
  failed_when: false

- name: create certs-data
  command: docker volume create --name certs-data
  when: certs_data_exists is failed

- name: remove httpd
  package:
    name: httpd
    state: absent
  when: (ansible_distribution == "Fedora")

- name: remove httpd
  package:
    name: apache2
    state: absent
  when: (ansible_distribution == "Ubuntu")

#- name: certbot container
#  docker:
#    name: certbot
#    image: deliverous/certbot
#    state: started
#    net: host
#    volumes:
#    - certs:/etc/letsencrypt
#    - certs-data:/data/letsencrypt

- name: create certbot
  shell: |
    docker run -t --rm \
    -v certs:/etc/letsencrypt \
    -v certs-data:/data/letsencrypt \
    --net=host \
    deliverous/certbot \
    certonly \
    --standalone \
    --agree-tos \
    --non-interactive \
    --email {{ cert_admin_email }} \
    -d {{ default_dashboard_domain_name }}

# docker run -t --rm -v certs:/etc/letsencrypt -v certs-data:/data/letsencrypt --net=host deliverous/certbot certonly --standalone --agree-tos --non-interactive --staging --email bbelky@gmail.com -d ui-swf.vzqa.site
# default_dashboard_domain_name

- name: copy nginx.conf
  template:
    src: nginx.j2
    dest: /root/nginx.conf
    owner: root
    group: root
    mode: 0644

- name: cron job for letsencrypt autorenewal
  cron:
    name: letsencrypt autorenewal
    weekday: 2
    minute: 0
    hour: 4
    user: root
    job: "docker stop ui && docker run -d --rm  --net=host -v certs:/etc/letsencrypt -v certs-data:/data/letsencrypt deliverous/certbot renew --standalone ; docker start ui"
    cron_file: le-autorenewal

- name: Log into swifty registry
  shell: "docker login {{ ui_registry_host }} -u {{ ui_docker_username }} -p {{ ui_docker_password }}"

- name: cleanup nginx containers, if running
  shell: "docker stop ui || true && docker rm ui || true"

- name: start ui
  shell: docker run -d -p 80:80 -p 443:443 --name ui --restart always -v /root/nginx.conf:/etc/nginx/conf.d/default.conf -v certs:/etc/letsencrypt  -v certs-data:/data/letsencrypt -v /root/swifty.config.json:/html/swifty.config.json:ro registry.gitlab.com/swiftyteam/swifty-dashboard-v2
