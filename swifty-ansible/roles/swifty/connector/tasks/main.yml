- name: check if certs volume exists
  command: docker volume inspect certs
  register: certs_volume_exists
  failed_when: false

- name: create certs volume
  command: docker volume create --name certs
  when: certs_volume_exists is failed

- name: check if certs-data exists
  command: docker volume inspect certs-data
  register: certs_data_exists
  failed_when: false

- name: create certs-data
  command: docker volume create --name certs-data
  when: certs_data_exists is failed

- name: remove httpd
  package:
    name: httpd
    state: absent
  when: (ansible_distribution == "Fedora")

- name: remove httpd
  package:
    name: apache2
    state: absent
  when: (ansible_distribution == "Ubuntu")

- name: create certbot
  shell: |
    docker run -t --rm \
    -v certs:/etc/letsencrypt \
    -v certs-data:/data/letsencrypt \
    --net=host \
    deliverous/certbot \
    certonly \
    --standalone \
    --agree-tos \
    --non-interactive \
    --email {{ cert_admin_email }} \
    -d {{ default_connector_domain_name }}

- name: copy nginx.conf
  template:
    src: nginx.j2
    dest: /root/nginx.conf
    owner: root
    group: root
    mode: 0644

- name: copy .env
  template:
    src: env.j2
    dest: /root/.env
    owner: root
    group: root
    mode: 0644

- name: copy docker-compose.yml
  template:
    src: docker-compose.j2
    dest: /root/docker-compose.yml
    owner: root
    group: root
    mode: 0644

- name: cron job for letsencrypt autorenewal
  cron:
    name: letsencrypt autorenewal
    weekday: 2
    minute: 0
    hour: 4
    user: root
    job: "docker-compose -f /root/docker-compose.yml  stop && docker run -d --rm  --net=host -v certs:/etc/letsencrypt -v certs-data:/data/letsencrypt deliverous/certbot renew --standalone ; docker-compose -f /root/docker-compose.yml start"
    cron_file: le-autorenewal

- name: Log into swifty registry
  shell: "docker login {{ connector_registry_host }} -u {{ connector_docker_username }} -p {{ connector_docker_password }}"

- name: Start connector
  shell: docker-compose -f /root/docker-compose.yml pull && docker-compose -f /root/docker-compose.yml up -d
  args:
    chdir: /root

- name: Wait while containers run
  pause:
    seconds: 30

- name: Configure connector
  raw: docker-compose -f /root/docker-compose.yml exec -T app mkdir -p storage/framework/{sessions,views,cache} && docker-compose -f /root/docker-compose.yml exec -T app chown -R 33:33 storage && docker-compose -f /root/docker-compose.yml exec -T app php artisan migrate --force
