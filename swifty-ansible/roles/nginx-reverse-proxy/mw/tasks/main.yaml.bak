- name: copy s3.conf
  template:
    src: s3.j2
    dest: /root/s3.conf
    owner: root
    group: root
    mode: 0644

- name: check if certs volume exists
  command: docker volume inspect certs
  register: certs_volume_exists
  failed_when: false

- name: create certs volume
  command: docker volume create --name certs
  when: certs_volume_exists is failed

- name: check if certs-data exists
  command: docker volume inspect certs-data
  register: certs_data_exists
  failed_when: false

- name: create certs-data
  command: docker volume create --name certs-data
  when: certs_data_exists is failed

- name: remove httpd
  package:
    name: httpd
    state: absent
  when: (ansible_distribution == "Fedora")

- name: remove httpd
  package:
    name: apache2
    state: absent
  when: (ansible_distribution == "Ubuntu")

- name: create certbot
  shell: |
    docker run -t --rm \
    -v certs:/etc/letsencrypt \
    -v certs-data:/data/letsencrypt \
    --net=host \
    deliverous/certbot \
    certonly \
    --standalone \
    --agree-tos \
    --non-interactive \
    --email {{ cert_admin_email }} \
    -d {{ s3_domain_name | default(default_s3_domain_name) }}

- name: cron job for letsencrypt autorenewal
  cron:
    name: letsencrypt autorenewal
    weekday: 2
    minute: 0
    hour: 4
    user: root
    job: "docker stop nginx-proxy swys3 && docker run -d --rm  --net=host -v certs:/etc/letsencrypt -v certs-data:/data/letsencrypt deliverous/certbot renew --standalone ; docker start nginx-proxy swys3"
    cron_file: le-autorenewal

- name: cleanup nginx-proxy containers, if running
  shell: "sudo docker stop nginx-proxy || true && sudo docker rm nginx-proxy || true"

- name: run nginx container
  shell: docker run -d -p 443:443 -v /root/s3.conf:/etc/nginx/conf.d/s3.conf -v certs:/etc/letsencrypt  -v certs-data:/data/letsencrypt --name nginx-proxy nginx
